In the console, type clear and hit Enter or Return. 

This will clear the console output. 

Run the file once while the tasks are short. 

Copy and paste the terminal results (when task_duration is 0) here.
 C:\Users\15736\Documents\streaming-02-multiple-processes> & C:/Users/15736/AppData/Local/Programs/Python/Python310/python.exe c:/Users/15736/Documents/streaming-02-multiple-processes/about.py


==============================================================
==============================================================

 Welcome! 

 It's 2023-01-19 at 03:11 PM

 This file is running on:    nt Windows 10
 
 The Python version is:      3.10.7

 The Python interpreter is at:
 C:\Users\15736\AppData\Local\Programs\Python\Python310\python.exe

 The active environment should be either conda OR pip (one should be None):

     Active conda env is: None
     Active pip env is:   None

 The path to the active virtual environment is:

 C:\Users\15736\AppData\Local\Programs\Python\Python310

 The Current Working Directory (CWD) where this command was launched is:

 C:\Users\15736\Documents\streaming-02-multiple-processes

 The absolute path to the data directory is:

 C:\Users\15736\Documents\streaming-02-multiple-processes\

 The absolute path to this source directory is:
 c:\Users\15736\Documents\streaming-02-multiple-processes

 The absolute path to this file is:

 c:\Users\15736\Documents\streaming-02-multiple-processes\about.py

==============================================================
==============================================================


PS C:\Users\15736\Documents\streaming-02-multiple-processes> & C:/Users/15736/AppData/Local/Programs/Python/Python310/python.exe c:/Users/15736/Documents/streaming-02-multiple-processes/multiple_processes.py


STARTING UP.............................
It's 2023-01-19 at 03:11 PM

This file is running on:    nt Windows 10
The Python version is:      3.10.7

The Python interpreter is at:
 C:\Users\15736\AppData\Local\Programs\Python\Python310\python.exe


DELETED tabble pets.
CREATED table pets.

P2 getting ready to insert Cooper the Rabbit.
P1 getting ready to insert Ace the Dog.
P3 getting ready to insert Emma the Rabbit.
P2 ADDED Cooper the Rabbit.
P3 ADDED Emma the Rabbit.
P2 getting ready to insert Dufus the Dog.
P3 getting ready to insert Felix the Cat.
P3 ADDED Felix the Cat.
P1 ADDED Ace the Dog.
P1 getting ready to insert Buddy the Dog.
P1 ADDED Buddy the Dog.

SUCCESS! All processes are done.
Now - increase the task duration (representing
      the time the task has the database
      tied up during an insert statement).
How well do the multiple, concurrent processes share a database
when each task can take more time?
How can we let multiple processes share a resource
without interfering with each other?

PS C:\Users\15736\Documents\streaming-02-multiple-processes> & C:/Users/15736/AppData/Local/Programs/Python/Python310/python.exe c:/Users/15736/Documents/streaming-02-multiple-processes/multiple_processes.py


STARTING UP.............................
It's 2023-01-19 at 03:22 PM

This file is running on:    nt Windows 10
The Python version is:      3.10.7

The Python interpreter is at:
 C:\Users\15736\AppData\Local\Programs\Python\Python310\python.exe


DELETED tabble pets.
CREATED table pets.

P1 getting ready to insert Ace the Dog.
P2 getting ready to insert Cooper the Rabbit.
P1 ADDED Ace the Dog.
P3 getting ready to insert Emma the Rabbit.
P1 getting ready to insert Buddy the Dog.
P1 ADDED Buddy the Dog.
Process Process-3:
Traceback (most recent call last):
  File "C:\Users\15736\AppData\Local\Programs\Python\Python310\lib\multiprocessing\process.py", line 314, in _bootstrap        
    self.run()
  File "C:\Users\15736\AppData\Local\Programs\Python\Python310\lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "c:\Users\15736\Documents\streaming-02-multiple-processes\multiple_processes.py", line 110, in process_three
    insert_pet("P3","Emma", "Rabbit")
  File "c:\Users\15736\Documents\streaming-02-multiple-processes\multiple_processes.py", line 95, in insert_pet
    cur.execute(sql)
sqlite3.OperationalError: database is locked
Traceback (most recent call last):
  File "C:\Users\15736\AppData\Local\Programs\Python\Python310\lib\multiprocessing\process.py", line 314, in _bootstrap        
    self.run()
  File "C:\Users\15736\AppData\Local\Programs\Python\Python310\lib\multiprocessing\process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "c:\Users\15736\Documents\streaming-02-multiple-processes\multiple_processes.py", line 106, in process_two
    insert_pet("P2", "Cooper", "Rabbit")
  File "c:\Users\15736\Documents\streaming-02-multiple-processes\multiple_processes.py", line 95, in insert_pet
    cur.execute(sql)
sqlite3.OperationalError: database is locked
PS C:\Users\15736\Documents\streaming-02-multiple-processes> & C:/Users/15736/AppData/Local/Programs/Python/Python310/python.exe c:/Users/15736/Documents/streaming-02-multiple-processes/multiple_processes.py


STARTING UP.............................
It's 2023-01-19 at 03:24 PM

This file is running on:    nt Windows 10
The Python version is:      3.10.7

The Python interpreter is at:
 C:\Users\15736\AppData\Local\Programs\Python\Python310\python.exe


DELETED tabble pets.
CREATED table pets.

P1 getting ready to insert Ace the Dog.
P2 getting ready to insert Cooper the Rabbit.
P1 ADDED Ace the Dog.
P3 getting ready to insert Emma the Rabbit.
P1 getting ready to insert Buddy the Dog.
P2 ADDED Cooper the Rabbit.
P2 getting ready to insert Dufus the Dog.
P2 ADDED Dufus the Dog.
P3 ADDED Emma the Rabbit.
P3 getting ready to insert Felix the Cat.
PS C:\Users\15736\Documents\streaming-02-multiple-processes> & C:/Users/15736/AppData/Local/Programs/Python/Python310/python.exe c:/Users/15736/Documents/streaming-02-multiple-processes/multiple_processes.py


STARTING UP.............................
It's 2023-01-19 at 03:24 PM

This file is running on:    nt Windows 10
The Python version is:      3.10.7

The Python interpreter is at:
 C:\Users\15736\AppData\Local\Programs\Python\Python310\python.exe


DELETED tabble pets.
CREATED table pets.

P1 getting ready to insert Ace the Dog.
P1 ADDED Ace the Dog.
P1 getting ready to insert Buddy the Dog.
P2 getting ready to insert Cooper the Rabbit.
P1 ADDED Buddy the Dog.
P3 getting ready to insert Emma the Rabbit.
P2 ADDED Cooper the Rabbit.
P2 getting ready to insert Dufus the Dog.
P2 ADDED Dufus the Dog.
P3 ADDED Emma the Rabbit.
P3 getting ready to insert Felix the Cat.
P3 ADDED Felix the Cat.

SUCCESS! All processes are done.
Now - increase the task duration (representing
      the time the task has the database
      tied up during an insert statement).
How well do the multiple, concurrent processes share a database
when each task can take more time? It did create a second area for shared.db-journal which was interesting. 
The processes took too long to finish one when the next one starts, causing the database to lock.
How can we let multiple processes share a resource
without interfering with each other?- either with an arbitrator, Dijkstra's solution, or Chandy/Misra solution.
